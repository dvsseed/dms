<?php

namespace App\Http\Controllers\Api;

use App\User;
use App\Transformers\UserTransformer;
use Illuminate\Http\Request;

use App\Http\Requests;
use Excel;
use Hashids;

class UsersController extends ApiController
{
    /**
     * UsersController constructor.
     */
    public function __construct()
    {
        // $this->middleware('authorized:manage-post,posts', ['except' => ['index', 'show']]);
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        //return $this->respondWith(User::all(), new UserTransformer);
        return $this->respondWith(
            User::where('role_level', '<', 9)->orderBy('created_at', 'DESC')->paginate(10)->appends(['include' => $request->input('include')]),
            new UserTransformer
        );
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $user = new User;
        $user->name = hash('adler32', time());
//        $user->fill($request->all());
        $user->save();
        return $this->respondWith($user, new UserTransformer);
    }

    /**
     * Display the specified resource.
     *
     * @param \App\User $user
     *
     * @return \Illuminate\Http\Response
     * @internal param int $id
     */
//    public function show(User $user)
//    {
//        return $this->respondWith($user, new UserTransformer);
//    }
    public function show($hashid)
    {
        //get id from hashid
        $userid = \Hashids::decode($hashid);
        $user = User::findOrFail($userid);

        return $this->respondWith($user, new UserTransformer);
    }

    /**
     * Edit user.
     *
     * @param $hashid
     *
     * @return \Illuminate\Http\Response
     */
    public function edit($hashid)
    {
        //get id from hashid
        $userid = \Hashids::decode($hashid);
        $user = User::findOrFail($userid);

        return $this->respondWith($user, new UserTransformer);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request $request
     * @param \App\User $user
     *
     * @return \Illuminate\Http\Response
     * @internal param int $id
     */
    public function update(Request $request, User $user)
    {
        $user->fill($request->all());
        $user->save();

        return $this->respondWith($user, new UserTransformer);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param \App\User $user
     *
     * @return \Illuminate\Http\Response
     * @throws \Exception
     *
     */
    public function destroy(User $user)
    {
        $user->delete();

        return $this->respondWithArray([
            'success' => true,
            'message' => '刪除使用者成功!!'
        ]);
    }

    /**
     * Export the specified resource to Excel format file.
     *
     * @throws \Exception
     *
     */
    public function xlsUsers()
    {
        $users = $this->getUsersData();

        Excel::create('使用者清單', function($excel) use($users) {
            $excel->sheet('users', function($sheet) use($users) {
                $sheet->fromArray($users, null, 'A1', false, false);
                $sheet->prependRow(1, array('ID', '使用者', '診所', '登入Email', '職務'));
                $sheet->setWidth([
                    'A' => 10,
                    'B' => 20,
                    'C' => 20,
                    'D' => 30,
                    'E' => 20,
                ]);
                $sheet->getDefaultStyle();
            });
        })->export('xls');
    }

    /**
     * Get the records of users.
     *
     * @return \Illuminate\Http\Response
     *
     */
    public function getUsersData()
    {
        return User::where('role_level', '<', 9)->select('id', 'name', 'clinic', 'email', 'bio')->orderBy('created_at', 'DESC')->get()->toArray();
    }

}
